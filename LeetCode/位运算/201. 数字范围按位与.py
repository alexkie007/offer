'''
给定范围 [m,n]，其中 0 <= m <= n <= 2147483647，返回此范围内所有数字的按位与（包含m, n两端点）。

例如，给定范围 [5,7]，您应该返回 4。
'''


"""
解题思路：
这道题是一道bit 操作的题目。
首先考虑如果区间是[k,k]那么返回值就是k。
如果区间是[m,n]，即此时n > m，那么从m变化到n这些数字，bit的最低位最后的“与”的结果一定是0
，因为从m变化到m＋1，如果m的最低位是0，那么此时变化到1，与之后这一位肯定还是0，如果m最低位是1，那么m＋1最后一位肯定是0.
所以与的最终结果最低位肯定还是0. 
如果m ＝＝ n，那么结果就是n，如果n > m，那么它们的最低位肯定是0，此时只需去计算n/2与m/2的结果，然后将结果左移一位。 
"""
class Solution:
    def rangeBitwiseAnd(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        i = 0
        while m != n:
            m >>= 1
            n >>= 1
            i += 1
        return n << i

s = Solution()
print(s.rangeBitwiseAnd(5, 7))